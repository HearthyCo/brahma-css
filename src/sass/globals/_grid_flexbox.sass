@import "media-query"


/*
  ************
  GRID
  *************/

$grid-columns: 16 !default
$reorder: false !default

//****************************
//  Mixins
//****************************

// --------- Column
@mixin __column-n($n)
  :width ((100% / $grid-columns) * $n)

@mixin __push-n($n)
  :margin-left ((100% / $grid-columns) * $n)

@mixin __pull-n($n)
  :margin-left (-(100% / $grid-columns) * $n)

@mixin _box-sizing($boxmodel)
  -webkit-box-sizing: $boxmodel
  -moz-box-sizing: $boxmodel
  box-sizing: $boxmodel

@mixin _grid-column-n($suffix: '')
  @if ($suffix and $suffix != '')
    $suffix: #{'-' + $suffix}
  @for $i from 1 through $grid-columns
    .column-#{$i}#{$suffix}
      @include __column-n($i)
    .push-#{$i}#{$suffix}
      @include __push-n($i)
    .pull-#{$i}#{$suffix}
      @include __pull-n($i)

=float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}")
  @for $i from 1 + 1 through $grid-columns
    $list: "#{$list}, .col-#{$class}-#{$i}"
  \:root:not(.flexbox):not(.webkitbox)
    & #{$list}
      float: left

=calc-grid-column($index, $class, $type)
  @if $type == width and $index > 0
    .col-#{$class}-#{$index}
      width: percentage($index / $grid-columns)
  @if $reorder
    @if $type == push and $index > 0
      \:root:not(.flexbox):not(.webkitbox)
        & .col-#{$class}-push-#{$index}
          left: percentage($index / $grid-columns)
      @if $index < $grid-columns
        \:root.flexbox, :root.webkitbox
          & .col-#{$class}-push-#{$index}
            +order-flex($index + 1)
    @if $type == push and $index == 0
      \:root:not(.flexbox):not(.webkitbox)
        & .col-#{$class}-push-0
          left: auto
      \:root.flexbox, :root.webkitbox
        & .col-#{$class}-push-0
          +order-flex($index + 1)
    @if $type == pull and $index > 0
      \:root:not(.flexbox):not(.webkitbox)
        & .col-#{$class}-pull-#{$index}
          right: percentage($index / $grid-columns)
      @if $index < $grid-columns
        \:root.flexbox, :root.webkitbox
          & .col-#{$class}-pull-#{$index}
            +order-flex($grid-columns - $index)
    @if $type == pull and $index == 0
      \:root:not(.flexbox):not(.webkitbox)
        & .col-#{$class}-pull-0
          right: auto
      \:root.flexbox, :root.webkitbox
        & .col-#{$class}-pull-0
          +order-flex($grid-columns)
  @if $type == offset
    .col-#{$class}-offset-#{$index}
      margin-left: percentage($index / $grid-columns)

=loop-grid-columns($columns, $class, $type)
  @for $i from 0 through $columns
    +calc-grid-column($i, $class, $type)

=make-grid($class)
  +float-grid-columns($class)
  +loop-grid-columns($grid-columns, $class, width)
  +loop-grid-columns($grid-columns, $class, pull)
  +loop-grid-columns($grid-columns, $class, push)
  +loop-grid-columns($grid-columns, $class, offset)

=order-flex($i)
  -webkit-box-ordinal-group: $i
  -ms-flex-order: $i
  -webkit-order: $i
  order: $i


//** Placeholder Selector Declarations **//
%boxsizing
  +box-sizing(border-box)

%clearfix
  &::before, &::after
    content: ' '
    display: table
  &::after
    clear: both


//** Class Selector Declarations **//
*, *::before, *::after
  @extend %boxsizing

.container, .container-fluid
  margin-right: auto
  margin-left: auto
  padding-left: $grid-gutter-width / 2
  padding-right: $grid-gutter-width / 2
  @extend %clearfix

.row
  margin-left: $grid-gutter-width / -2
  margin-right: $grid-gutter-width / -2
  @extend %clearfix
  \:root.flexbox &, :root.webkitbox &
    display: -webkit-box
    display: -ms-flexbox
    display: -webkit-flex
    display: flex

+make-grid-columns

+make-grid(xs)

@media (min-width: $screen-sm-min)
  .container
    width: $container-sm
  +make-grid(sm)

@media (min-width: $screen-md-min)
  .container
    width: $container-md
  +make-grid(md)

@media (min-width: $screen-lg-min)
  .container
    width: $container-lg
  +make-grid(lg)